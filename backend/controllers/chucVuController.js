const ChucVu = require("../models/chucVuModel");

const ChucVuController = {
  // üîπ L·∫•y danh s√°ch t·∫•t c·∫£ ch·ª©c v·ª•
  getAllChucVu: async (req, res) => {
    try {
      const data = await ChucVu.getAlls();
      res.status(200).json(data);
    } catch (error) {
      console.error("L·ªói khi l·∫•y danh s√°ch ch·ª©c v·ª•:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },

  // üîπ L·∫•y chi ti·∫øt ch·ª©c v·ª• theo ID
  getChucVuById: async (req, res) => {
    try {
      const { id } = req.params;
      const record = await ChucVu.getById(id);

      if (!record) {
        return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ch·ª©c v·ª•!" });
      }

      res.status(200).json(record);
    } catch (error) {
      console.error("L·ªói khi l·∫•y ch·ª©c v·ª•:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },

  // üîπ Th√™m ch·ª©c v·ª• m·ªõi
  createChucVu: async (req, res) => {
    try {
      const { TenChucVu } = req.body;

      if (!TenChucVu) {
        return res.status(400).json({ message: "T√™n ch·ª©c v·ª• l√† b·∫Øt bu·ªôc!" });
      }

      const result = await ChucVu.create({ TenChucVu });

      return res.status(201).json({
        message: "Th√™m ch·ª©c v·ª• th√†nh c√¥ng!",
        data: result,
      });
    } catch (error) {
      console.error("L·ªói khi th√™m ch·ª©c v·ª•:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },

  // üîπ C·∫≠p nh·∫≠t ch·ª©c v·ª•
  updateChucVu: async (req, res) => {
    try {
      const { id } = req.params;
      const { TenChucVu } = req.body;

      if (!TenChucVu) {
        return res.status(400).json({ message: "T√™n ch·ª©c v·ª• l√† b·∫Øt bu·ªôc!" });
      }

      const result = await ChucVu.update(id, { TenChucVu });

      if (result.affectedRows === 0) {
        return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ch·ª©c v·ª• ƒë·ªÉ c·∫≠p nh·∫≠t!" });
      }

      return res.status(200).json({ message: "C·∫≠p nh·∫≠t ch·ª©c v·ª• th√†nh c√¥ng!" });
    } catch (error) {
      console.error("L·ªói khi c·∫≠p nh·∫≠t ch·ª©c v·ª•:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },

  // üîπ X√≥a ch·ª©c v·ª•
  deleteChucVu: async (req, res) => {
    try {
      const { id } = req.params;
      const deleted = await ChucVu.delete(id);

      if (!deleted) {
        return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ch·ª©c v·ª• ƒë·ªÉ x√≥a!" });
      }

      return res.status(200).json({ message: "X√≥a ch·ª©c v·ª• th√†nh c√¥ng!" });
    } catch (error) {
      console.error("L·ªói khi x√≥a ch·ª©c v·ª•:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },
};

module.exports = ChucVuController;
