const ChiTietPhieuKham = require("../models/chiTietPhieuKhamModel");

const ChiTietPhieuKhamController = {
  // üîπ L·∫•y danh s√°ch t·∫•t c·∫£ chi ti·∫øt phi·∫øu kh√°m
  getAllChiTietPhieuKham: async (req, res) => {
    try {
      const data = await ChiTietPhieuKham.getAlls();
      res.status(200).json(data);
    } catch (error) {
      console.error("L·ªói khi l·∫•y danh s√°ch chi ti·∫øt phi·∫øu kh√°m:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },

  // üîπ L·∫•y chi ti·∫øt theo ID (MaCTPK)
  getChiTietPhieuKhamById: async (req, res) => {
    try {
      const { id } = req.params;
      const record = await ChiTietPhieuKham.getById(id);

      if (!record) {
        return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y chi ti·∫øt phi·∫øu kh√°m!" });
      }

      res.status(200).json(record);
    } catch (error) {
      console.error("L·ªói khi l·∫•y chi ti·∫øt phi·∫øu kh√°m:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },

  // üîπ Th√™m chi ti·∫øt phi·∫øu kh√°m m·ªõi
  createChiTietPhieuKham: async (req, res) => {
    try {
      const { ThanhTien, DonGia, SoLuong, MaPhieuKham, MaDichVu } = req.body;

      // Ki·ªÉm tra c√°c tr∆∞·ªùng b·∫Øt bu·ªôc
      if (!ThanhTien || !DonGia || !SoLuong || !MaPhieuKham || !MaDichVu) {
        return res.status(400).json({
          message: "C√°c tr∆∞·ªùng ThanhTien, DonGia, SoLuong, MaPhieuKham, MaDichVu l√† b·∫Øt bu·ªôc!",
        });
      }

      const result = await ChiTietPhieuKham.create({
        ThanhTien,
        DonGia,
        SoLuong,
        MaPhieuKham,
        MaDichVu,
      });

      return res.status(201).json({
        message: "Th√™m chi ti·∫øt phi·∫øu kh√°m th√†nh c√¥ng!",
        data: result,
      });
    } catch (error) {
      console.error("L·ªói khi th√™m chi ti·∫øt phi·∫øu kh√°m:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },

  // üîπ C·∫≠p nh·∫≠t chi ti·∫øt phi·∫øu kh√°m
  updateChiTietPhieuKham: async (req, res) => {
    try {
      const { id } = req.params;
      const { ThanhTien, DonGia, SoLuong, MaPhieuKham, MaDichVu } = req.body;

      if (!ThanhTien || !DonGia || !SoLuong || !MaPhieuKham || !MaDichVu) {
        return res.status(400).json({
          message: "C√°c tr∆∞·ªùng ThanhTien, DonGia, SoLuong, MaPhieuKham, MaDichVu l√† b·∫Øt bu·ªôc!",
        });
      }

      const result = await ChiTietPhieuKham.update(id, {
        ThanhTien,
        DonGia,
        SoLuong,
        MaPhieuKham,
        MaDichVu,
      });

      if (result.affectedRows === 0) {
        return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y chi ti·∫øt phi·∫øu kh√°m ƒë·ªÉ c·∫≠p nh·∫≠t!" });
      }

      return res.status(200).json({ message: "C·∫≠p nh·∫≠t chi ti·∫øt phi·∫øu kh√°m th√†nh c√¥ng!" });
    } catch (error) {
      console.error("L·ªói khi c·∫≠p nh·∫≠t chi ti·∫øt phi·∫øu kh√°m:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },

  // üîπ X√≥a chi ti·∫øt phi·∫øu kh√°m
  deleteChiTietPhieuKham: async (req, res) => {
    try {
      const { id } = req.params;
      const deleted = await ChiTietPhieuKham.delete(id);

      if (!deleted) {
        return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y chi ti·∫øt phi·∫øu kh√°m ƒë·ªÉ x√≥a!" });
      }

      return res.status(200).json({ message: "X√≥a chi ti·∫øt phi·∫øu kh√°m th√†nh c√¥ng!" });
    } catch (error) {
      console.error("L·ªói khi x√≥a chi ti·∫øt phi·∫øu kh√°m:", error);
      res.status(500).json({ message: "L·ªói server", error: error.message });
    }
  },
};

module.exports = ChiTietPhieuKhamController;
